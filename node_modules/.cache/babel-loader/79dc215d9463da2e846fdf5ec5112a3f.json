{"ast":null,"code":"var _jsxFileName = \"/Users/gulbakhytsassykova/alis/src/pages/FormPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, FormControl, TextField } from \"@mui/material\";\nimport { useCallback } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { getFieldState } from \"../utils/getFieldState\";\nimport { validateIIN } from \"../utils/validateNumbers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormPage = () => {\n  _s();\n\n  const label = {\n    inputProps: {\n      \"aria-label\": \"Checkbox demo\"\n    }\n  }; // const [iin, setIin] = useState(\"\");\n  // const [fullName, setFullName] = useState(\"\");\n\n  const {\n    handleSubmit,\n    control,\n    reset\n  } = useForm({\n    mode: \"onChange\",\n    defaultValues: {\n      iin: \"\",\n      fullName: \"\"\n    }\n  }); // const validateForm = (e: any) => {\n  //   e.preventDefault();\n  //   if (iin.length < 12) {\n  //     alert(\"Enter right IIN\");\n  //     return;\n  //   }\n  //   const data = {\n  //     iin,\n  //   };\n  // };\n\n  const onSubmit = useCallback(values => {\n    alert(\"SUBMIT\");\n    console.log(values);\n    reset();\n  }, [reset]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"iin\",\n        control: control,\n        rules: {\n          required: \"Поле обязательное\",\n          validate: value => {\n            if (validateIIN(value)) {\n              return true;\n            } else {\n              return \"Not Valid\";\n            }\n          }\n        },\n        render: _ref => {\n          let {\n            field,\n            fieldState,\n            formState\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"IIN\",\n              ...getFieldState({\n                fieldState,\n                formState\n              }),\n              variant: \"outlined\",\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormPage, \"VCaOfBk12PFa9d+feXn6WGR2778=\", false, function () {\n  return [useForm];\n});\n\n_c = FormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"names":["Button","FormControl","TextField","useCallback","Controller","useForm","getFieldState","validateIIN","FormPage","label","inputProps","handleSubmit","control","reset","mode","defaultValues","iin","fullName","onSubmit","values","alert","console","log","mb","required","validate","value","field","fieldState","formState"],"sources":["/Users/gulbakhytsassykova/alis/src/pages/FormPage.tsx"],"sourcesContent":["import { Button, Checkbox, FormControl, TextField } from \"@mui/material\";\nimport grey from \"@mui/material/colors/grey\";\nimport { pink } from \"@mui/material/colors\";\nimport RadioButtonUncheckedIcon from \"@mui/icons-material/RadioButtonUnchecked\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport { useCallback, useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { getFieldState } from \"../utils/getFieldState\";\nimport { validateIIN } from \"../utils/validateNumbers\";\n\nexport const FormPage = () => {\n  const label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n  // const [iin, setIin] = useState(\"\");\n  // const [fullName, setFullName] = useState(\"\");\n  const { handleSubmit, control, reset } = useForm({\n    mode: \"onChange\",\n    defaultValues: {\n      iin: \"\",\n      fullName: \"\",\n    },\n  });\n\n  // const validateForm = (e: any) => {\n  //   e.preventDefault();\n\n  //   if (iin.length < 12) {\n  //     alert(\"Enter right IIN\");\n  //     return;\n  //   }\n\n  //   const data = {\n  //     iin,\n  //   };\n  // };\n  const onSubmit = useCallback(\n    (values: any) => {\n      alert(\"SUBMIT\");\n      console.log(values);\n\n      reset();\n    },\n    [reset],\n  );\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      {/* <div style={{ display: \"flex\" }}>\n        <p>Организационно-правовая форма</p>{\" \"}\n        <div>\n          <Checkbox\n            icon={<RadioButtonUncheckedIcon />}\n            checkedIcon={<CheckCircleIcon />}\n            {...label}\n            defaultChecked\n            sx={{\n              color: grey[800],\n              \"&.Mui-checked\": {\n                color: pink[600],\n              },\n            }}\n          />{\" \"}\n          AO\n        </div>\n        <div>\n          <Checkbox\n            icon={<RadioButtonUncheckedIcon />}\n            checkedIcon={<CheckCircleIcon />}\n            {...label}\n            defaultChecked\n            sx={{\n              color: grey[800],\n              \"&.Mui-checked\": {\n                color: pink[600],\n              },\n            }}\n          />\n          TOO\n        </div>\n        <div>\n          <Checkbox\n            icon={<RadioButtonUncheckedIcon />}\n            checkedIcon={<CheckCircleIcon />}\n            {...label}\n            defaultChecked\n            sx={{\n              color: grey[800],\n              \"&.Mui-checked\": {\n                color: pink[600],\n              },\n            }}\n          />\n          ИП\n        </div>\n      </div>\n      <div style={{ display: \"flex\" }}>\n        <p>БИН/ИИН:</p>\n        <TextField\n          value={iin}\n          onChange={(e) => setIin(e.target.value)}\n          size=\"small\"\n          type=\"number\"\n          placeholder=\"\"\n          inputProps={{\n            maxLength: 12,\n          }}\n          required></TextField>\n      </div>\n      <div style={{ display: \"flex\" }}>\n        <p>Полное наименование:</p>\n        <TextField\n          value={fullName}\n          onChange={(e) => setFullName(e.target.value)}\n          size=\"small\"\n          type=\"text\"\n          placeholder=\"\"\n          required></TextField>\n      </div> */}\n      <FormControl fullWidth sx={{ mb: 2 }}>\n        <Controller\n          name=\"iin\"\n          control={control}\n          rules={{\n            required: \"Поле обязательное\",\n            validate: (value) => {\n              if (validateIIN(value)) {\n                return true;\n              } else {\n                return \"Not Valid\";\n              }\n            },\n          }}\n          render={({ field, fieldState, formState }) => (\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"IIN\"\n                {...getFieldState({ fieldState, formState })}\n                variant=\"outlined\"\n                {...field}\n              />\n            </div>\n          )}\n        />\n      </FormControl>\n      <Button type=\"submit\" variant=\"contained\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,MAAT,EAA2BC,WAA3B,EAAwCC,SAAxC,QAAyD,eAAzD;AAKA,SAASC,WAAT,QAAsC,OAAtC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,iBAApC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAC5B,MAAMC,KAAK,GAAG;IAAEC,UAAU,EAAE;MAAE,cAAc;IAAhB;EAAd,CAAd,CAD4B,CAE5B;EACA;;EACA,MAAM;IAAEC,YAAF;IAAgBC,OAAhB;IAAyBC;EAAzB,IAAmCR,OAAO,CAAC;IAC/CS,IAAI,EAAE,UADyC;IAE/CC,aAAa,EAAE;MACbC,GAAG,EAAE,EADQ;MAEbC,QAAQ,EAAE;IAFG;EAFgC,CAAD,CAAhD,CAJ4B,CAY5B;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;;EACA,MAAMC,QAAQ,GAAGf,WAAW,CACzBgB,MAAD,IAAiB;IACfC,KAAK,CAAC,QAAD,CAAL;IACAC,OAAO,CAACC,GAAR,CAAYH,MAAZ;IAEAN,KAAK;EACN,CANyB,EAO1B,CAACA,KAAD,CAP0B,CAA5B;EASA,oBACE;IAAM,QAAQ,EAAEF,YAAY,CAACO,QAAD,CAA5B;IAAA,wBAwEE,QAAC,WAAD;MAAa,SAAS,MAAtB;MAAuB,EAAE,EAAE;QAAEK,EAAE,EAAE;MAAN,CAA3B;MAAA,uBACE,QAAC,UAAD;QACE,IAAI,EAAC,KADP;QAEE,OAAO,EAAEX,OAFX;QAGE,KAAK,EAAE;UACLY,QAAQ,EAAE,mBADL;UAELC,QAAQ,EAAGC,KAAD,IAAW;YACnB,IAAInB,WAAW,CAACmB,KAAD,CAAf,EAAwB;cACtB,OAAO,IAAP;YACD,CAFD,MAEO;cACL,OAAO,WAAP;YACD;UACF;QARI,CAHT;QAaE,MAAM,EAAE;UAAA,IAAC;YAAEC,KAAF;YAASC,UAAT;YAAqBC;UAArB,CAAD;UAAA,oBACN;YAAA,uBACE,QAAC,SAAD;cACE,EAAE,EAAC,gBADL;cAEE,KAAK,EAAC,KAFR;cAAA,GAGMvB,aAAa,CAAC;gBAAEsB,UAAF;gBAAcC;cAAd,CAAD,CAHnB;cAIE,OAAO,EAAC,UAJV;cAAA,GAKMF;YALN;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADM;QAAA;MAbV;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAxEF,eAmGE,QAAC,MAAD;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAC,WAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAnGF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyGD,CA1IM;;GAAMnB,Q;UAI8BH,O;;;KAJ9BG,Q"},"metadata":{},"sourceType":"module"}