{"ast":null,"code":"var _jsxFileName = \"/Users/gulbakhytsassykova/alis/src/pages/FormPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, FormControl, styled, TextField } from \"@mui/material\";\nimport { useCallback } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { getFieldState } from \"../utils/getFieldState\";\nimport validator from \"validator\";\nimport { validateIIN } from \"../utils/validateNumbers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormPage = () => {\n  _s();\n\n  // const label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n  const {\n    handleSubmit,\n    control,\n    reset\n  } = useForm({\n    mode: \"onChange\",\n    defaultValues: {\n      iin: \"\",\n      fullNameOfOrganization: \"\",\n      secondName: \"\",\n      firstName: \"\",\n      fathersName: \"\",\n      email: \"\",\n      phone: \"\"\n    }\n  });\n  const Form = styled(\"form\")`\n    tr {\n      width: 600px;\n      \n    }\n  `; // const validateForm = (e: any) => {\n  //   e.preventDefault();\n  //   if (iin.length < 12) {\n  //     alert(\"Enter right IIN\");\n  //     return;\n  //   }\n  //   const data = {\n  //     iin,\n  //   };\n  // };\n\n  const onSubmit = useCallback(values => {\n    alert(\"SUBMIT\");\n    console.log(values);\n    reset();\n  }, [reset]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    style: {\n      marginLeft: \"60px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043E\\u0431 \\u043E\\u0440\\u0433\\u0430\\u043D\\u0438\\u0437\\u0430\\u0446\\u0438\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"iin\",\n        control: control,\n        rules: {\n          required: \"Поле обязательное\",\n          validate: value => {\n            if (validateIIN(value)) {\n              return true;\n            } else {\n              return \"Not Valid\";\n            }\n          }\n        },\n        render: _ref => {\n          let {\n            field,\n            fieldState,\n            formState\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \" \\u0411\\u0418\\u041D /\\u0418\\u0418\\u041D:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                type: \"number\",\n                id: \"outlined-basic\",\n                label: \"IIN\",\n                ...getFieldState({\n                  fieldState,\n                  formState\n                }),\n                variant: \"outlined\",\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"fullNameOfOrganization\",\n        control: control,\n        rules: {\n          required: \"Поле обязательное\",\n          validate: value => {\n            if (value.length < 200) {\n              return true;\n            } else {\n              return \"Not Valid\";\n            }\n          }\n        },\n        render: _ref2 => {\n          let {\n            field,\n            fieldState,\n            formState\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \" \\u041F\\u043E\\u043B\\u043D\\u043E\\u0435 \\u043D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-basic\",\n                label: \"Name\",\n                ...getFieldState({\n                  fieldState,\n                  formState\n                }),\n                variant: \"outlined\",\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043F\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u0438\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"secondName\",\n        control: control,\n        rules: {\n          required: \"Поле обязательное\",\n          validate: value => {\n            if (value.length > 3) {\n              return true;\n            } else {\n              return \"Not Valid\";\n            }\n          }\n        },\n        render: _ref3 => {\n          let {\n            field,\n            fieldState,\n            formState\n          } = _ref3;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \" \\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-basic\",\n                label: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n                ...getFieldState({\n                  fieldState,\n                  formState\n                }),\n                variant: \"outlined\",\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"firstName\",\n        control: control,\n        rules: {\n          required: \"Поле обязательное\",\n          validate: value => {\n            if (value.length > 3) {\n              return true;\n            } else {\n              return \"Not Valid\";\n            }\n          }\n        },\n        render: _ref4 => {\n          let {\n            field,\n            fieldState,\n            formState\n          } = _ref4;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \" \\u0418\\u043C\\u044F:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-basic\",\n                label: \"\\u0418\\u043C\\u044F\",\n                ...getFieldState({\n                  fieldState,\n                  formState\n                }),\n                variant: \"outlined\",\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"fathersName\",\n        control: control,\n        rules: {\n          validate: value => {\n            if (value.length > 3) {\n              return true;\n            } else {\n              return \"Not Valid\";\n            }\n          }\n        },\n        render: _ref5 => {\n          let {\n            field,\n            fieldState,\n            formState\n          } = _ref5;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"\\u041E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"lightgrey\"\n                },\n                children: \"(\\u043D\\u0435\\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 26\n              }, this), \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-basic\",\n                label: \" \\u041E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\",\n                ...getFieldState({\n                  fieldState,\n                  formState\n                }),\n                variant: \"outlined\",\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"email\",\n        control: control,\n        rules: {\n          validate: value => {\n            if (validator.isEmail(value)) {\n              return true;\n            } else if (value.length == 0) {\n              return true;\n            } else {\n              return \"invalid email\";\n            }\n          }\n        },\n        render: _ref6 => {\n          let {\n            field,\n            formState,\n            fieldState\n          } = _ref6;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"\\u042D\\u043B. \\u043F\\u043E\\u0447\\u0442\\u0430:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-basic\",\n                label: \"\\u042D\\u043B. \\u043F\\u043E\\u0447\\u0442\\u0430\",\n                variant: \"outlined\",\n                ...getFieldState({\n                  fieldState,\n                  formState\n                }),\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      required: true,\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"phone\",\n        control: control,\n        rules: {\n          required: \"Поле обязательное\" // validate: (value) => {\n          //   return IMask(value, maskOptions);\n          // },\n\n        },\n        render: _ref7 => {\n          let {\n            field,\n            formState,\n            fieldState\n          } = _ref7;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"\\u041D\\u043E\\u043C\\u0435\\u0440:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-basic\",\n                label: \"phone\",\n                variant: \"outlined\",\n                placeholder: \"+7(000)000-00-00\",\n                ...getFieldState({\n                  fieldState,\n                  formState\n                }),\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormPage, \"VCaOfBk12PFa9d+feXn6WGR2778=\", false, function () {\n  return [useForm];\n});\n\n_c = FormPage;\n{\n  /* <div style={{ display: \"flex\" }}>\n        <p>Организационно-правовая форма</p>{\" \"}\n        <div>\n          <Checkbox\n            icon={<RadioButtonUncheckedIcon />}\n            checkedIcon={<CheckCircleIcon />}\n            {...label}\n            defaultChecked\n            sx={{\n              color: grey[800],\n              \"&.Mui-checked\": {\n                color: pink[600],\n              },\n            }}\n          />{\" \"}\n          AO\n        </div>\n        <div>\n          <Checkbox\n            icon={<RadioButtonUncheckedIcon />}\n            checkedIcon={<CheckCircleIcon />}\n            {...label}\n            defaultChecked\n            sx={{\n              color: grey[800],\n              \"&.Mui-checked\": {\n                color: pink[600],\n              },\n            }}\n          />\n          TOO\n        </div>\n        <div>\n          <Checkbox\n            icon={<RadioButtonUncheckedIcon />}\n            checkedIcon={<CheckCircleIcon />}\n            {...label}\n            defaultChecked\n            sx={{\n              color: grey[800],\n              \"&.Mui-checked\": {\n                color: pink[600],\n              },\n            }}\n          />\n          ИП\n        </div>\n      </div>\n    */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"names":["Button","FormControl","styled","TextField","useCallback","Controller","useForm","getFieldState","validator","validateIIN","FormPage","handleSubmit","control","reset","mode","defaultValues","iin","fullNameOfOrganization","secondName","firstName","fathersName","email","phone","Form","onSubmit","values","alert","console","log","marginLeft","mb","required","validate","value","field","fieldState","formState","length","color","isEmail"],"sources":["/Users/gulbakhytsassykova/alis/src/pages/FormPage.tsx"],"sourcesContent":["import { Button, Checkbox, FormControl, styled, TextField } from \"@mui/material\";\nimport grey from \"@mui/material/colors/grey\";\nimport { pink } from \"@mui/material/colors\";\nimport RadioButtonUncheckedIcon from \"@mui/icons-material/RadioButtonUnchecked\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport { useCallback, useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { getFieldState } from \"../utils/getFieldState\";\nimport validator from \"validator\";\nimport { validateIIN } from \"../utils/validateNumbers\";\nimport { IMask } from \"react-imask\";\nexport const FormPage = () => {\n  // const label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n\n  const { handleSubmit, control, reset } = useForm({\n    mode: \"onChange\",\n    defaultValues: {\n      iin: \"\",\n      fullNameOfOrganization: \"\",\n      secondName: \"\",\n      firstName: \"\",\n      fathersName: \"\",\n      email: \"\",\n      phone: \"\",\n    },\n  });\n  const Form = styled(\"form\")`\n    tr {\n      width: 600px;\n      \n    }\n  `;\n\n  // const validateForm = (e: any) => {\n  //   e.preventDefault();\n\n  //   if (iin.length < 12) {\n  //     alert(\"Enter right IIN\");\n  //     return;\n  //   }\n\n  //   const data = {\n  //     iin,\n  //   };\n  // };\n  const onSubmit = useCallback(\n    (values: any) => {\n      alert(\"SUBMIT\");\n      console.log(values);\n\n      reset();\n    },\n    [reset],\n  );\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)} style={{ marginLeft: \"60px\" }}>\n      <h3>Данные об организации</h3>\n\n      <FormControl fullWidth sx={{ mb: 2 }}>\n        <Controller\n          name=\"iin\"\n          control={control}\n          rules={{\n            required: \"Поле обязательное\",\n            validate: (value) => {\n              if (validateIIN(value)) {\n                return true;\n              } else {\n                return \"Not Valid\";\n              }\n            },\n          }}\n          render={({ field, fieldState, formState }) => (\n            <tr>\n              <td> БИН /ИИН:</td>\n              <td>\n                <TextField\n                  type=\"number\"\n                  id=\"outlined-basic\"\n                  label=\"IIN\"\n                  {...getFieldState({ fieldState, formState })}\n                  variant=\"outlined\"\n                  {...field}\n                />\n              </td>\n            </tr>\n          )}\n        />\n      </FormControl>\n\n      <FormControl fullWidth sx={{ mb: 2 }}>\n        <Controller\n          name=\"fullNameOfOrganization\"\n          control={control}\n          rules={{\n            required: \"Поле обязательное\",\n            validate: (value) => {\n              if (value.length < 200) {\n                return true;\n              } else {\n                return \"Not Valid\";\n              }\n            },\n          }}\n          render={({ field, fieldState, formState }) => (\n            <tr>\n              <td> Полное наименование:</td>\n              <td>\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Name\"\n                  {...getFieldState({ fieldState, formState })}\n                  variant=\"outlined\"\n                  {...field}\n                />\n              </td>\n            </tr>\n          )}\n        />\n      </FormControl>\n      <h3>Данные представителя</h3>\n      <FormControl fullWidth sx={{ mb: 2 }}>\n        <Controller\n          name=\"secondName\"\n          control={control}\n          rules={{\n            required: \"Поле обязательное\",\n            validate: (value) => {\n              if (value.length > 3) {\n                return true;\n              } else {\n                return \"Not Valid\";\n              }\n            },\n          }}\n          render={({ field, fieldState, formState }) => (\n            <tr>\n              <td> Фамилия:</td>\n              <td>\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Фамилия\"\n                  {...getFieldState({ fieldState, formState })}\n                  variant=\"outlined\"\n                  {...field}\n                />\n              </td>\n            </tr>\n          )}\n        />\n      </FormControl>\n      <FormControl fullWidth sx={{ mb: 2 }}>\n        <Controller\n          name=\"firstName\"\n          control={control}\n          rules={{\n            required: \"Поле обязательное\",\n            validate: (value) => {\n              if (value.length > 3) {\n                return true;\n              } else {\n                return \"Not Valid\";\n              }\n            },\n          }}\n          render={({ field, fieldState, formState }) => (\n            <tr>\n              <td> Имя:</td>\n              <td>\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Имя\"\n                  {...getFieldState({ fieldState, formState })}\n                  variant=\"outlined\"\n                  {...field}\n                />\n              </td>\n            </tr>\n          )}\n        />\n      </FormControl>\n      <FormControl fullWidth sx={{ mb: 2 }}>\n        <Controller\n          name=\"fathersName\"\n          control={control}\n          rules={{\n            validate: (value) => {\n              if (value.length > 3) {\n                return true;\n              } else {\n                return \"Not Valid\";\n              }\n            },\n          }}\n          render={({ field, fieldState, formState }) => (\n            <tr>\n              <td>\n                Отчество <span style={{ color: \"lightgrey\" }}>(необязательный)</span>:\n              </td>\n              <td>\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\" Отчество\"\n                  {...getFieldState({ fieldState, formState })}\n                  variant=\"outlined\"\n                  {...field}\n                />\n              </td>\n            </tr>\n          )}\n        />\n      </FormControl>\n      <FormControl fullWidth sx={{ mb: 2 }}>\n        <Controller\n          name=\"email\"\n          control={control}\n          rules={{\n            validate: (value) => {\n              if (validator.isEmail(value)) {\n                return true;\n              } else if (value.length == 0) {\n                return true;\n              } else {\n                return \"invalid email\";\n              }\n            },\n          }}\n          render={({ field, formState, fieldState }) => (\n            <tr>\n              <td>Эл. почта:</td>\n              <td>\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Эл. почта\"\n                  variant=\"outlined\"\n                  {...getFieldState({ fieldState, formState })}\n                  {...field}\n                />\n              </td>\n            </tr>\n          )}\n        />\n      </FormControl>\n      <FormControl fullWidth sx={{ mb: 2 }} required>\n        <Controller\n          name=\"phone\"\n          control={control}\n          rules={{\n            required: \"Поле обязательное\",\n            // validate: (value) => {\n            //   return IMask(value, maskOptions);\n            // },\n          }}\n          render={({ field, formState, fieldState }) => (\n            <tr>\n              <td>Номер:</td>\n              <td>\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"phone\"\n                  variant=\"outlined\"\n                  placeholder=\"+7(000)000-00-00\"\n                  {...getFieldState({ fieldState, formState })}\n                  {...field}\n                />\n              </td>\n            </tr>\n          )}\n        />\n      </FormControl>\n\n      <Button type=\"submit\" variant=\"contained\">\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\n{\n  /* <div style={{ display: \"flex\" }}>\n        <p>Организационно-правовая форма</p>{\" \"}\n        <div>\n          <Checkbox\n            icon={<RadioButtonUncheckedIcon />}\n            checkedIcon={<CheckCircleIcon />}\n            {...label}\n            defaultChecked\n            sx={{\n              color: grey[800],\n              \"&.Mui-checked\": {\n                color: pink[600],\n              },\n            }}\n          />{\" \"}\n          AO\n        </div>\n        <div>\n          <Checkbox\n            icon={<RadioButtonUncheckedIcon />}\n            checkedIcon={<CheckCircleIcon />}\n            {...label}\n            defaultChecked\n            sx={{\n              color: grey[800],\n              \"&.Mui-checked\": {\n                color: pink[600],\n              },\n            }}\n          />\n          TOO\n        </div>\n        <div>\n          <Checkbox\n            icon={<RadioButtonUncheckedIcon />}\n            checkedIcon={<CheckCircleIcon />}\n            {...label}\n            defaultChecked\n            sx={{\n              color: grey[800],\n              \"&.Mui-checked\": {\n                color: pink[600],\n              },\n            }}\n          />\n          ИП\n        </div>\n      </div>\n    */\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}