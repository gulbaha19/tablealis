{"ast":null,"code":"var _jsxFileName = \"/Users/gulbakhytsassykova/alis/src/pages/FormPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, FormControl, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormPage = () => {\n  _s();\n\n  const label = {\n    inputProps: {\n      \"aria-label\": \"Checkbox demo\"\n    }\n  };\n  const [iin, setIin] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n\n  const validateForm = e => {\n    e.preventDefault();\n\n    if (iin.length < 12) {\n      alert(\"Enter right IIN\");\n      return;\n    }\n\n    const data = {\n      iin\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: validateForm,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: [\"// eslint-disable-next-line react/jsx-no-undef\", /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"name\",\n        control: control,\n        rules: {\n          required: \"Поле обязательное\",\n          validate: value => {\n            if (value.length > 3) {\n              return true;\n            } else {\n              return \"Not Valid\";\n            }\n          }\n        },\n        render: _ref => {\n          let {\n            field,\n            fieldState,\n            formState\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"\\u0418\\u043C\\u044F\",\n            ...getFieldState({\n              fieldState,\n              formState\n            }),\n            variant: \"outlined\",\n            ...field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormPage, \"CY/8pj94H/eJXW4PNFGX+JanzDU=\");\n\n_c = FormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"names":["Button","FormControl","TextField","useState","FormPage","label","inputProps","iin","setIin","fullName","setFullName","validateForm","e","preventDefault","length","alert","data","mb","control","required","validate","value","field","fieldState","formState","getFieldState"],"sources":["/Users/gulbakhytsassykova/alis/src/pages/FormPage.tsx"],"sourcesContent":["import { Button, Checkbox, FormControl, TextField } from \"@mui/material\";\nimport grey from \"@mui/material/colors/grey\";\nimport { pink } from \"@mui/material/colors\";\nimport RadioButtonUncheckedIcon from \"@mui/icons-material/RadioButtonUnchecked\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport { useState } from \"react\";\n\nexport const FormPage = () => {\n  const label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\n  const [iin, setIin] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n\n  const validateForm = (e: any) => {\n    e.preventDefault();\n\n    if (iin.length < 12) {\n      alert(\"Enter right IIN\");\n      return;\n    }\n\n    const data = {\n      iin,\n    };\n  };\n\n  return (\n    <form onSubmit={validateForm}>\n      {/* <div style={{ display: \"flex\" }}>\n        <p>Организационно-правовая форма</p>{\" \"}\n        <div>\n          <Checkbox\n            icon={<RadioButtonUncheckedIcon />}\n            checkedIcon={<CheckCircleIcon />}\n            {...label}\n            defaultChecked\n            sx={{\n              color: grey[800],\n              \"&.Mui-checked\": {\n                color: pink[600],\n              },\n            }}\n          />{\" \"}\n          AO\n        </div>\n        <div>\n          <Checkbox\n            icon={<RadioButtonUncheckedIcon />}\n            checkedIcon={<CheckCircleIcon />}\n            {...label}\n            defaultChecked\n            sx={{\n              color: grey[800],\n              \"&.Mui-checked\": {\n                color: pink[600],\n              },\n            }}\n          />\n          TOO\n        </div>\n        <div>\n          <Checkbox\n            icon={<RadioButtonUncheckedIcon />}\n            checkedIcon={<CheckCircleIcon />}\n            {...label}\n            defaultChecked\n            sx={{\n              color: grey[800],\n              \"&.Mui-checked\": {\n                color: pink[600],\n              },\n            }}\n          />\n          ИП\n        </div>\n      </div>\n      <div style={{ display: \"flex\" }}>\n        <p>БИН/ИИН:</p>\n        <TextField\n          value={iin}\n          onChange={(e) => setIin(e.target.value)}\n          size=\"small\"\n          type=\"number\"\n          placeholder=\"\"\n          inputProps={{\n            maxLength: 12,\n          }}\n          required></TextField>\n      </div>\n      <div style={{ display: \"flex\" }}>\n        <p>Полное наименование:</p>\n        <TextField\n          value={fullName}\n          onChange={(e) => setFullName(e.target.value)}\n          size=\"small\"\n          type=\"text\"\n          placeholder=\"\"\n          required></TextField>\n      </div> */}\n      <FormControl fullWidth sx={{ mb: 2 }}>\n            // eslint-disable-next-line react/jsx-no-undef\n            <Controller\n              name=\"name\"\n              control={control}\n              rules={{\n                required: \"Поле обязательное\",\n                validate: (value) => {\n                  if (value.length > 3) {\n                    return true;\n                  } else {\n                    return \"Not Valid\";\n                  }\n                },\n              }}\n              render={({ field, fieldState, formState }) => (\n                <TextField\n                  id=\"outlined-basic\"\n                  label=\"Имя\"\n                  {...getFieldState({ fieldState, formState })}\n                  variant=\"outlined\"\n                  {...field}\n                />\n              )}\n            />\n          </FormControl>\n      <Button type=\"submit\" variant=\"contained\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,MAAT,EAA2BC,WAA3B,EAAwCC,SAAxC,QAAyD,eAAzD;AAKA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAC5B,MAAMC,KAAK,GAAG;IAAEC,UAAU,EAAE;MAAE,cAAc;IAAhB;EAAd,CAAd;EACA,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBL,QAAQ,CAAC,EAAD,CAA9B;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMQ,YAAY,GAAIC,CAAD,IAAY;IAC/BA,CAAC,CAACC,cAAF;;IAEA,IAAIN,GAAG,CAACO,MAAJ,GAAa,EAAjB,EAAqB;MACnBC,KAAK,CAAC,iBAAD,CAAL;MACA;IACD;;IAED,MAAMC,IAAI,GAAG;MACXT;IADW,CAAb;EAGD,CAXD;;EAaA,oBACE;IAAM,QAAQ,EAAEI,YAAhB;IAAA,wBAwEE,QAAC,WAAD;MAAa,SAAS,MAAtB;MAAuB,EAAE,EAAE;QAAEM,EAAE,EAAE;MAAN,CAA3B;MAAA,0EAEM,QAAC,UAAD;QACE,IAAI,EAAC,MADP;QAEE,OAAO,EAAEC,OAFX;QAGE,KAAK,EAAE;UACLC,QAAQ,EAAE,mBADL;UAELC,QAAQ,EAAGC,KAAD,IAAW;YACnB,IAAIA,KAAK,CAACP,MAAN,GAAe,CAAnB,EAAsB;cACpB,OAAO,IAAP;YACD,CAFD,MAEO;cACL,OAAO,WAAP;YACD;UACF;QARI,CAHT;QAaE,MAAM,EAAE;UAAA,IAAC;YAAEQ,KAAF;YAASC,UAAT;YAAqBC;UAArB,CAAD;UAAA,oBACN,QAAC,SAAD;YACE,EAAE,EAAC,gBADL;YAEE,KAAK,EAAC,oBAFR;YAAA,GAGMC,aAAa,CAAC;cAAEF,UAAF;cAAcC;YAAd,CAAD,CAHnB;YAIE,OAAO,EAAC,UAJV;YAAA,GAKMF;UALN;YAAA;YAAA;YAAA;UAAA,QADM;QAAA;MAbV;QAAA;QAAA;QAAA;MAAA,QAFN;IAAA;MAAA;MAAA;MAAA;IAAA,QAxEF,eAkGE,QAAC,MAAD;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAC,WAA9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAlGF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwGD,CA1HM;;GAAMlB,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}