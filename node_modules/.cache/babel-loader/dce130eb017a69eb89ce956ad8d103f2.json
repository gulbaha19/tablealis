{"ast":null,"code":"'use strict';\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nvar reactDom = require('react-dom');\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nvar invariant = _interopDefault(require('invariant'));\n\nvar warning = _interopDefault(require('warning'));\n\nfunction _defaults2(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults2(subClass, superClass);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction defer(fn) {\n  return requestAnimationFrame(fn);\n}\n\nfunction cancelDefer(deferId) {\n  cancelAnimationFrame(deferId);\n}\n\nfunction setInputSelection(input, start, end) {\n  if (end === undefined) {\n    end = start;\n  }\n\n  input.setSelectionRange(start, end);\n}\n\nfunction getInputSelection(input) {\n  var start = input.selectionStart;\n  var end = input.selectionEnd;\n  return {\n    start: start,\n    end: end,\n    length: end - start\n  };\n}\n\nfunction isInputFocused(input) {\n  return document.hasFocus() && document.activeElement === input;\n}\n\nfunction useInputElement(inputRef) {\n  return React.useCallback(function () {\n    var input = inputRef.current;\n    var isDOMNode = typeof window !== \"undefined\" && input instanceof window.HTMLElement; // workaround for react-test-renderer\n    // https://github.com/sanniassin/react-input-mask/issues/147\n\n    if (!input || !isDOMNode) {\n      return null;\n    }\n\n    if (input.nodeName !== \"INPUT\") {\n      input = input.querySelector(\"input\");\n    }\n\n    if (!input) {\n      throw new Error(\"react-input-mask: inputComponent doesn't contain input node\");\n    }\n\n    return input;\n  }, [inputRef]);\n}\n\nfunction useDeferLoop(callback) {\n  var deferIdRef = React.useRef(null);\n  var runLoop = React.useCallback(function () {\n    // If there are simulated focus events, runLoop could be\n    // called multiple times without blur or re-render\n    if (deferIdRef.current !== null) {\n      return;\n    }\n\n    function loop() {\n      callback();\n      deferIdRef.current = defer(loop);\n    }\n\n    loop();\n  }, [callback]);\n  var stopLoop = React.useCallback(function () {\n    cancelDefer(deferIdRef.current);\n    deferIdRef.current = null;\n  }, []);\n  React.useEffect(function () {\n    if (deferIdRef.current) {\n      stopLoop();\n      runLoop();\n    }\n  }, [runLoop, stopLoop]);\n  React.useEffect(cancelDefer, []);\n  return [runLoop, stopLoop];\n}\n\nfunction useSelection(inputRef, isMasked) {\n  var selectionRef = React.useRef({\n    start: null,\n    end: null\n  });\n  var getInputElement = useInputElement(inputRef);\n  var getSelection = React.useCallback(function () {\n    var input = getInputElement();\n    return getInputSelection(input);\n  }, [getInputElement]);\n  var getLastSelection = React.useCallback(function () {\n    return selectionRef.current;\n  }, []);\n  var setSelection = React.useCallback(function (selection) {\n    var input = getInputElement(); // Don't change selection on unfocused input\n    // because Safari sets focus on selection change (#154)\n\n    if (!input || !isInputFocused(input)) {\n      return;\n    }\n\n    setInputSelection(input, selection.start, selection.end); // Use actual selection in case the requested one was out of range\n\n    selectionRef.current = getSelection();\n  }, [getInputElement, getSelection]);\n  var selectionLoop = React.useCallback(function () {\n    selectionRef.current = getSelection();\n  }, [getSelection]);\n\n  var _useDeferLoop = useDeferLoop(selectionLoop),\n      runSelectionLoop = _useDeferLoop[0],\n      stopSelectionLoop = _useDeferLoop[1];\n\n  React.useLayoutEffect(function () {\n    if (!isMasked) {\n      return;\n    }\n\n    var input = getInputElement();\n    input.addEventListener(\"focus\", runSelectionLoop);\n    input.addEventListener(\"blur\", stopSelectionLoop);\n\n    if (isInputFocused(input)) {\n      runSelectionLoop();\n    }\n\n    return function () {\n      input.removeEventListener(\"focus\", runSelectionLoop);\n      input.removeEventListener(\"blur\", stopSelectionLoop);\n      stopSelectionLoop();\n    };\n  });\n  return {\n    getSelection: getSelection,\n    getLastSelection: getLastSelection,\n    setSelection: setSelection\n  };\n}\n\nfunction useValue(inputRef, initialValue) {\n  var getInputElement = useInputElement(inputRef);\n  var valueRef = React.useRef(initialValue);\n  var getValue = React.useCallback(function () {\n    var input = getInputElement();\n    return input.value;\n  }, [getInputElement]);\n  var getLastValue = React.useCallback(function () {\n    return valueRef.current;\n  }, []);\n  var setValue = React.useCallback(function (newValue) {\n    valueRef.current = newValue;\n    var input = getInputElement();\n\n    if (input) {\n      input.value = newValue;\n    }\n  }, [getInputElement]);\n  return {\n    getValue: getValue,\n    getLastValue: getLastValue,\n    setValue: setValue\n  };\n}\n\nfunction useInputState(initialValue, isMasked) {\n  var inputRef = React.useRef();\n\n  var _useSelection = useSelection(inputRef, isMasked),\n      getSelection = _useSelection.getSelection,\n      getLastSelection = _useSelection.getLastSelection,\n      setSelection = _useSelection.setSelection;\n\n  var _useValue = useValue(inputRef, initialValue),\n      getValue = _useValue.getValue,\n      getLastValue = _useValue.getLastValue,\n      setValue = _useValue.setValue;\n\n  function getLastInputState() {\n    return {\n      value: getLastValue(),\n      selection: getLastSelection()\n    };\n  }\n\n  function getInputState() {\n    return {\n      value: getValue(),\n      selection: getSelection()\n    };\n  }\n\n  function setInputState(_ref) {\n    var value = _ref.value,\n        selection = _ref.selection;\n    setValue(value);\n    setSelection(selection);\n  }\n\n  return {\n    inputRef: inputRef,\n    getInputState: getInputState,\n    getLastInputState: getLastInputState,\n    setInputState: setInputState\n  };\n}\n\nfunction usePrevious(value) {\n  var ref = React.useRef();\n  React.useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nvar CONTROLLED_PROPS = [\"disabled\", \"onBlur\", \"onChange\", \"onFocus\", \"onMouseDown\", \"readOnly\", \"value\"];\nvar defaultFormatChars = {\n  \"9\": /[0-9]/,\n  a: /[A-Za-z]/,\n  \"*\": /[A-Za-z0-9]/\n};\n\nfunction validateMaxLength(props) {\n  process.env.NODE_ENV !== \"production\" ? warning(!props.maxLength || !props.mask, \"react-input-mask: maxLength property shouldn't be passed to the masked input. It breaks masking and unnecessary because length is limited by the mask length.\") : void 0;\n}\n\nfunction validateMaskPlaceholder(props) {\n  var mask = props.mask,\n      maskPlaceholder = props.maskPlaceholder;\n  !(!mask || !maskPlaceholder || maskPlaceholder.length === 1 || maskPlaceholder.length === mask.length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-input-mask: maskPlaceholder should either be a single character or have the same length as the mask:\\n\" + (\"mask: \" + mask + \"\\n\") + (\"maskPlaceholder: \" + maskPlaceholder)) : invariant(false) : void 0;\n}\n\nfunction validateChildren(props, inputElement) {\n  var conflictProps = CONTROLLED_PROPS.filter(function (propId) {\n    return inputElement.props[propId] != null && inputElement.props[propId] !== props[propId];\n  });\n  !!conflictProps.length ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-input-mask: the following props should be passed to the InputMask component, not to children: \" + conflictProps.join(\",\")) : invariant(false) : void 0;\n}\n\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\n\nfunction findLastIndex(array, predicate) {\n  for (var i = array.length - 1; i >= 0; i--) {\n    var x = array[i];\n\n    if (predicate(x, i)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction repeat(string, n) {\n  if (n === void 0) {\n    n = 1;\n  }\n\n  var result = \"\";\n\n  for (var i = 0; i < n; i++) {\n    result += string;\n  }\n\n  return result;\n}\n\nfunction toString(value) {\n  return \"\" + value;\n}\n\nfunction parseMask(_ref) {\n  var mask = _ref.mask,\n      maskPlaceholder = _ref.maskPlaceholder;\n  var permanents = [];\n\n  if (!mask) {\n    return {\n      maskPlaceholder: null,\n      mask: null,\n      prefix: null,\n      lastEditablePosition: null,\n      permanents: []\n    };\n  }\n\n  if (typeof mask === \"string\") {\n    var isPermanent = false;\n    var parsedMaskString = \"\";\n    mask.split(\"\").forEach(function (character) {\n      if (!isPermanent && character === \"\\\\\") {\n        isPermanent = true;\n      } else {\n        if (isPermanent || !defaultFormatChars[character]) {\n          permanents.push(parsedMaskString.length);\n        }\n\n        parsedMaskString += character;\n        isPermanent = false;\n      }\n    });\n    mask = parsedMaskString.split(\"\").map(function (character, index) {\n      if (permanents.indexOf(index) === -1) {\n        return defaultFormatChars[character];\n      }\n\n      return character;\n    });\n  } else {\n    mask.forEach(function (character, index) {\n      if (typeof character === \"string\") {\n        permanents.push(index);\n      }\n    });\n  }\n\n  if (maskPlaceholder) {\n    if (maskPlaceholder.length === 1) {\n      maskPlaceholder = mask.map(function (character, index) {\n        if (permanents.indexOf(index) !== -1) {\n          return character;\n        }\n\n        return maskPlaceholder;\n      });\n    } else {\n      maskPlaceholder = maskPlaceholder.split(\"\");\n    }\n\n    permanents.forEach(function (position) {\n      maskPlaceholder[position] = mask[position];\n    });\n    maskPlaceholder = maskPlaceholder.join(\"\");\n  }\n\n  var prefix = permanents.filter(function (position, index) {\n    return position === index;\n  }).map(function (position) {\n    return mask[position];\n  }).join(\"\");\n  var lastEditablePosition = mask.length - 1;\n\n  while (permanents.indexOf(lastEditablePosition) !== -1) {\n    lastEditablePosition--;\n  }\n\n  return {\n    maskPlaceholder: maskPlaceholder,\n    prefix: prefix,\n    mask: mask,\n    lastEditablePosition: lastEditablePosition,\n    permanents: permanents\n  };\n}\n/* eslint no-use-before-define: [\"error\", { functions: false }] */\n\n\nvar MaskUtils = function MaskUtils(options) {\n  var _this = this;\n\n  this.isCharacterAllowedAtPosition = function (character, position) {\n    var maskPlaceholder = _this.maskOptions.maskPlaceholder;\n\n    if (_this.isCharacterFillingPosition(character, position)) {\n      return true;\n    }\n\n    if (!maskPlaceholder) {\n      return false;\n    }\n\n    return maskPlaceholder[position] === character;\n  };\n\n  this.isCharacterFillingPosition = function (character, position) {\n    var mask = _this.maskOptions.mask;\n\n    if (!character || position >= mask.length) {\n      return false;\n    }\n\n    if (!_this.isPositionEditable(position)) {\n      return mask[position] === character;\n    }\n\n    var charRule = mask[position];\n    return new RegExp(charRule).test(character);\n  };\n\n  this.isPositionEditable = function (position) {\n    var _this$maskOptions = _this.maskOptions,\n        mask = _this$maskOptions.mask,\n        permanents = _this$maskOptions.permanents;\n    return position < mask.length && permanents.indexOf(position) === -1;\n  };\n\n  this.isValueEmpty = function (value) {\n    return value.split(\"\").every(function (character, position) {\n      return !_this.isPositionEditable(position) || !_this.isCharacterFillingPosition(character, position);\n    });\n  };\n\n  this.isValueFilled = function (value) {\n    return _this.getFilledLength(value) === _this.maskOptions.lastEditablePosition + 1;\n  };\n\n  this.getDefaultSelectionForValue = function (value) {\n    var filledLength = _this.getFilledLength(value);\n\n    var cursorPosition = _this.getRightEditablePosition(filledLength);\n\n    return {\n      start: cursorPosition,\n      end: cursorPosition\n    };\n  };\n\n  this.getFilledLength = function (value) {\n    var characters = value.split(\"\");\n    var lastFilledIndex = findLastIndex(characters, function (character, position) {\n      return _this.isPositionEditable(position) && _this.isCharacterFillingPosition(character, position);\n    });\n    return lastFilledIndex + 1;\n  };\n\n  this.getStringFillingLengthAtPosition = function (string, position) {\n    var characters = string.split(\"\");\n    var insertedValue = characters.reduce(function (value, character) {\n      return _this.insertCharacterAtPosition(value, character, value.length);\n    }, repeat(\" \", position));\n    return insertedValue.length - position;\n  };\n\n  this.getLeftEditablePosition = function (position) {\n    for (var i = position; i >= 0; i--) {\n      if (_this.isPositionEditable(i)) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  this.getRightEditablePosition = function (position) {\n    var mask = _this.maskOptions.mask;\n\n    for (var i = position; i < mask.length; i++) {\n      if (_this.isPositionEditable(i)) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  this.formatValue = function (value) {\n    var _this$maskOptions2 = _this.maskOptions,\n        maskPlaceholder = _this$maskOptions2.maskPlaceholder,\n        mask = _this$maskOptions2.mask;\n\n    if (!maskPlaceholder) {\n      value = _this.insertStringAtPosition(\"\", value, 0);\n\n      while (value.length < mask.length && !_this.isPositionEditable(value.length)) {\n        value += mask[value.length];\n      }\n\n      return value;\n    }\n\n    return _this.insertStringAtPosition(maskPlaceholder, value, 0);\n  };\n\n  this.clearRange = function (value, start, len) {\n    if (!len) {\n      return value;\n    }\n\n    var end = start + len;\n    var _this$maskOptions3 = _this.maskOptions,\n        maskPlaceholder = _this$maskOptions3.maskPlaceholder,\n        mask = _this$maskOptions3.mask;\n    var clearedValue = value.split(\"\").map(function (character, i) {\n      var isEditable = _this.isPositionEditable(i);\n\n      if (!maskPlaceholder && i >= end && !isEditable) {\n        return \"\";\n      }\n\n      if (i < start || i >= end) {\n        return character;\n      }\n\n      if (!isEditable) {\n        return mask[i];\n      }\n\n      if (maskPlaceholder) {\n        return maskPlaceholder[i];\n      }\n\n      return \"\";\n    }).join(\"\");\n    return _this.formatValue(clearedValue);\n  };\n\n  this.insertCharacterAtPosition = function (value, character, position) {\n    var _this$maskOptions4 = _this.maskOptions,\n        mask = _this$maskOptions4.mask,\n        maskPlaceholder = _this$maskOptions4.maskPlaceholder;\n\n    if (position >= mask.length) {\n      return value;\n    }\n\n    var isAllowed = _this.isCharacterAllowedAtPosition(character, position);\n\n    var isEditable = _this.isPositionEditable(position);\n\n    var nextEditablePosition = _this.getRightEditablePosition(position);\n\n    var isNextPlaceholder = maskPlaceholder && nextEditablePosition ? character === maskPlaceholder[nextEditablePosition] : null;\n    var valueBefore = value.slice(0, position);\n\n    if (isAllowed || !isEditable) {\n      var insertedCharacter = isAllowed ? character : mask[position];\n      value = valueBefore + insertedCharacter;\n    }\n\n    if (!isAllowed && !isEditable && !isNextPlaceholder) {\n      value = _this.insertCharacterAtPosition(value, character, position + 1);\n    }\n\n    return value;\n  };\n\n  this.insertStringAtPosition = function (value, string, position) {\n    var _this$maskOptions5 = _this.maskOptions,\n        mask = _this$maskOptions5.mask,\n        maskPlaceholder = _this$maskOptions5.maskPlaceholder;\n\n    if (!string || position >= mask.length) {\n      return value;\n    }\n\n    var characters = string.split(\"\");\n    var isFixedLength = _this.isValueFilled(value) || !!maskPlaceholder;\n    var valueAfter = value.slice(position);\n    value = characters.reduce(function (value, character) {\n      return _this.insertCharacterAtPosition(value, character, value.length);\n    }, value.slice(0, position));\n\n    if (isFixedLength) {\n      value += valueAfter.slice(value.length - position);\n    } else if (_this.isValueFilled(value)) {\n      value += mask.slice(value.length).join(\"\");\n    } else {\n      var editableCharactersAfter = valueAfter.split(\"\").filter(function (character, i) {\n        return _this.isPositionEditable(position + i);\n      });\n      value = editableCharactersAfter.reduce(function (value, character) {\n        var nextEditablePosition = _this.getRightEditablePosition(value.length);\n\n        if (nextEditablePosition === null) {\n          return value;\n        }\n\n        if (!_this.isPositionEditable(value.length)) {\n          value += mask.slice(value.length, nextEditablePosition).join(\"\");\n        }\n\n        return _this.insertCharacterAtPosition(value, character, value.length);\n      }, value);\n    }\n\n    return value;\n  };\n\n  this.processChange = function (currentState, previousState) {\n    var _this$maskOptions6 = _this.maskOptions,\n        mask = _this$maskOptions6.mask,\n        prefix = _this$maskOptions6.prefix,\n        lastEditablePosition = _this$maskOptions6.lastEditablePosition;\n    var value = currentState.value,\n        selection = currentState.selection;\n    var previousValue = previousState.value;\n    var previousSelection = previousState.selection;\n    var newValue = value;\n    var enteredString = \"\";\n    var formattedEnteredStringLength = 0;\n    var removedLength = 0;\n    var cursorPosition = Math.min(previousSelection.start, selection.start);\n\n    if (selection.end > previousSelection.start) {\n      enteredString = newValue.slice(previousSelection.start, selection.end);\n      formattedEnteredStringLength = _this.getStringFillingLengthAtPosition(enteredString, cursorPosition);\n\n      if (!formattedEnteredStringLength) {\n        removedLength = 0;\n      } else {\n        removedLength = previousSelection.length;\n      }\n    } else if (newValue.length < previousValue.length) {\n      removedLength = previousValue.length - newValue.length;\n    }\n\n    newValue = previousValue;\n\n    if (removedLength) {\n      if (removedLength === 1 && !previousSelection.length) {\n        var deleteFromRight = previousSelection.start === selection.start;\n        cursorPosition = deleteFromRight ? _this.getRightEditablePosition(selection.start) : _this.getLeftEditablePosition(selection.start);\n      }\n\n      newValue = _this.clearRange(newValue, cursorPosition, removedLength);\n    }\n\n    newValue = _this.insertStringAtPosition(newValue, enteredString, cursorPosition);\n    cursorPosition += formattedEnteredStringLength;\n\n    if (cursorPosition >= mask.length) {\n      cursorPosition = mask.length;\n    } else if (cursorPosition < prefix.length && !formattedEnteredStringLength) {\n      cursorPosition = prefix.length;\n    } else if (cursorPosition >= prefix.length && cursorPosition < lastEditablePosition && formattedEnteredStringLength) {\n      cursorPosition = _this.getRightEditablePosition(cursorPosition);\n    }\n\n    newValue = _this.formatValue(newValue);\n    return {\n      value: newValue,\n      enteredString: enteredString,\n      selection: {\n        start: cursorPosition,\n        end: cursorPosition\n      }\n    };\n  };\n\n  this.maskOptions = parseMask(options);\n};\n\nvar InputMaskChildrenWrapper = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InputMaskChildrenWrapper, _React$Component);\n\n  function InputMaskChildrenWrapper() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = InputMaskChildrenWrapper.prototype;\n\n  _proto.render = function render() {\n    // eslint-disable-next-line react/prop-types\n    var _this$props = this.props,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\"]);\n\n    return React__default.cloneElement(children, props);\n  };\n\n  return InputMaskChildrenWrapper;\n}(React__default.Component);\n\nvar InputMask = React.forwardRef(function InputMask(props, forwardedRef) {\n  var alwaysShowMask = props.alwaysShowMask,\n      children = props.children,\n      mask = props.mask,\n      maskPlaceholder = props.maskPlaceholder,\n      beforeMaskedStateChange = props.beforeMaskedStateChange,\n      restProps = _objectWithoutPropertiesLoose(props, [\"alwaysShowMask\", \"children\", \"mask\", \"maskPlaceholder\", \"beforeMaskedStateChange\"]);\n\n  validateMaxLength(props);\n  validateMaskPlaceholder(props);\n  var maskUtils = new MaskUtils({\n    mask: mask,\n    maskPlaceholder: maskPlaceholder\n  });\n  var isMasked = !!mask;\n  var isEditable = !restProps.disabled && !restProps.readOnly;\n  var isControlled = props.value !== null && props.value !== undefined;\n  var previousIsMasked = usePrevious(isMasked);\n  var initialValue = toString((isControlled ? props.value : props.defaultValue) || \"\");\n\n  var _useInputState = useInputState(initialValue, isMasked),\n      inputRef = _useInputState.inputRef,\n      getInputState = _useInputState.getInputState,\n      setInputState = _useInputState.setInputState,\n      getLastInputState = _useInputState.getLastInputState;\n\n  var getInputElement = useInputElement(inputRef);\n\n  function onChange(event) {\n    var currentState = getInputState();\n    var previousState = getLastInputState();\n    var newInputState = maskUtils.processChange(currentState, previousState);\n\n    if (beforeMaskedStateChange) {\n      newInputState = beforeMaskedStateChange({\n        currentState: currentState,\n        previousState: previousState,\n        nextState: newInputState\n      });\n    }\n\n    setInputState(newInputState);\n\n    if (props.onChange) {\n      props.onChange(event);\n    }\n  }\n\n  function onFocus(event) {\n    // If autoFocus property is set, focus event fires before the ref handler gets called\n    inputRef.current = event.target;\n    var currentValue = getInputState().value;\n\n    if (isMasked && !maskUtils.isValueFilled(currentValue)) {\n      var newValue = maskUtils.formatValue(currentValue);\n      var newSelection = maskUtils.getDefaultSelectionForValue(newValue);\n      var newInputState = {\n        value: newValue,\n        selection: newSelection\n      };\n\n      if (beforeMaskedStateChange) {\n        newInputState = beforeMaskedStateChange({\n          currentState: getInputState(),\n          nextState: newInputState\n        });\n        newValue = newInputState.value;\n        newSelection = newInputState.selection;\n      }\n\n      setInputState(newInputState);\n\n      if (newValue !== currentValue && props.onChange) {\n        props.onChange(event);\n      } // Chrome resets selection after focus event,\n      // so we want to restore it later\n\n\n      defer(function () {\n        setInputState(getLastInputState());\n      });\n    }\n\n    if (props.onFocus) {\n      props.onFocus(event);\n    }\n  }\n\n  function onBlur(event) {\n    var currentValue = getInputState().value;\n    var lastValue = getLastInputState().value;\n\n    if (isMasked && !alwaysShowMask && maskUtils.isValueEmpty(lastValue)) {\n      var newValue = \"\";\n      var newInputState = {\n        value: newValue,\n        selection: {\n          start: null,\n          end: null\n        }\n      };\n\n      if (beforeMaskedStateChange) {\n        newInputState = beforeMaskedStateChange({\n          currentState: getInputState(),\n          nextState: newInputState\n        });\n        newValue = newInputState.value;\n      }\n\n      setInputState(newInputState);\n\n      if (newValue !== currentValue && props.onChange) {\n        props.onChange(event);\n      }\n    }\n\n    if (props.onBlur) {\n      props.onBlur(event);\n    }\n  } // Tiny unintentional mouse movements can break cursor\n  // position on focus, so we have to restore it in that case\n  //\n  // https://github.com/sanniassin/react-input-mask/issues/108\n\n\n  function onMouseDown(event) {\n    var input = getInputElement();\n\n    var _getInputState = getInputState(),\n        value = _getInputState.value;\n\n    if (!isInputFocused(input) && !maskUtils.isValueFilled(value)) {\n      var mouseDownX = event.clientX;\n      var mouseDownY = event.clientY;\n      var mouseDownTime = new Date().getTime();\n\n      var mouseUpHandler = function mouseUpHandler(mouseUpEvent) {\n        document.removeEventListener(\"mouseup\", mouseUpHandler);\n\n        if (!isInputFocused(input)) {\n          return;\n        }\n\n        var deltaX = Math.abs(mouseUpEvent.clientX - mouseDownX);\n        var deltaY = Math.abs(mouseUpEvent.clientY - mouseDownY);\n        var axisDelta = Math.max(deltaX, deltaY);\n        var timeDelta = new Date().getTime() - mouseDownTime;\n\n        if (axisDelta <= 10 && timeDelta <= 200 || axisDelta <= 5 && timeDelta <= 300) {\n          var _lastState = getLastInputState();\n\n          var newSelection = maskUtils.getDefaultSelectionForValue(_lastState.value);\n\n          var newState = _extends({}, _lastState, {\n            selection: newSelection\n          });\n\n          setInputState(newState);\n        }\n      };\n\n      document.addEventListener(\"mouseup\", mouseUpHandler);\n    }\n\n    if (props.onMouseDown) {\n      props.onMouseDown(event);\n    }\n  } // For controlled inputs we want to provide properly formatted\n  // value prop\n\n\n  if (isMasked && isControlled) {\n    var input = getInputElement();\n    var isFocused = input && isInputFocused(input);\n    var newValue = isFocused || alwaysShowMask || props.value ? maskUtils.formatValue(props.value) : props.value;\n\n    if (beforeMaskedStateChange) {\n      newValue = beforeMaskedStateChange({\n        nextState: {\n          value: newValue,\n          selection: {\n            start: null,\n            end: null\n          }\n        }\n      }).value;\n    }\n\n    setInputState(_extends({}, getLastInputState(), {\n      value: newValue\n    }));\n  }\n\n  var lastState = getLastInputState();\n  var lastSelection = lastState.selection;\n  var lastValue = lastState.value;\n  React.useLayoutEffect(function () {\n    if (!isMasked) {\n      return;\n    }\n\n    var input = getInputElement();\n    var isFocused = isInputFocused(input);\n    var previousSelection = lastSelection;\n    var currentState = getInputState();\n\n    var newInputState = _extends({}, currentState); // Update value for uncontrolled inputs to make sure\n    // it's always in sync with mask props\n\n\n    if (!isControlled) {\n      var currentValue = currentState.value;\n      var formattedValue = maskUtils.formatValue(currentValue);\n      var isValueEmpty = maskUtils.isValueEmpty(formattedValue);\n      var shouldFormatValue = !isValueEmpty || isFocused || alwaysShowMask;\n\n      if (shouldFormatValue) {\n        newInputState.value = formattedValue;\n      } else if (isValueEmpty && !isFocused) {\n        newInputState.value = \"\";\n      }\n    }\n\n    if (isFocused && !previousIsMasked) {\n      // Adjust selection if input got masked while being focused\n      newInputState.selection = maskUtils.getDefaultSelectionForValue(newInputState.value);\n    } else if (isControlled && isFocused && previousSelection) {\n      // Restore cursor position if value has changed outside change event\n      if (previousSelection.start !== null && previousSelection.end !== null) {\n        newInputState.selection = previousSelection;\n      }\n    }\n\n    if (beforeMaskedStateChange) {\n      newInputState = beforeMaskedStateChange({\n        currentState: currentState,\n        nextState: newInputState\n      });\n    }\n\n    setInputState(newInputState);\n  });\n\n  var inputProps = _extends({}, restProps, {\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onChange: isMasked && isEditable ? onChange : props.onChange,\n    onMouseDown: isMasked && isEditable ? onMouseDown : props.onMouseDown,\n    ref: function ref(_ref) {\n      inputRef.current = reactDom.findDOMNode(_ref);\n\n      if (isFunction(forwardedRef)) {\n        forwardedRef(_ref);\n      } else if (forwardedRef !== null && typeof forwardedRef === \"object\") {\n        forwardedRef.current = _ref;\n      }\n    },\n    value: isMasked && isControlled ? lastValue : props.value\n  });\n\n  if (children) {\n    validateChildren(props, children); // We wrap children into a class component to be able to find\n    // their input element using findDOMNode\n\n    return React__default.createElement(InputMaskChildrenWrapper, inputProps, children);\n  }\n\n  return React__default.createElement(\"input\", inputProps);\n});\nInputMask.displayName = \"InputMask\";\nInputMask.defaultProps = {\n  alwaysShowMask: false,\n  maskPlaceholder: \"_\"\n};\nInputMask.propTypes = {\n  alwaysShowMask: PropTypes.bool,\n  beforeMaskedStateChange: PropTypes.func,\n  children: PropTypes.element,\n  mask: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(RegExp)]))]),\n  maskPlaceholder: PropTypes.string,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onMouseDown: PropTypes.func\n};\nmodule.exports = InputMask;","map":{"version":3,"names":["_interopDefault","ex","React","require","React__default","reactDom","PropTypes","invariant","warning","_defaults2","obj","defaults","keys","Object","getOwnPropertyNames","i","length","key","value","getOwnPropertyDescriptor","configurable","undefined","defineProperty","_extends","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","defer","fn","requestAnimationFrame","cancelDefer","deferId","cancelAnimationFrame","setInputSelection","input","start","end","setSelectionRange","getInputSelection","selectionStart","selectionEnd","isInputFocused","document","hasFocus","activeElement","useInputElement","inputRef","useCallback","current","isDOMNode","window","HTMLElement","nodeName","querySelector","Error","useDeferLoop","callback","deferIdRef","useRef","runLoop","loop","stopLoop","useEffect","useSelection","isMasked","selectionRef","getInputElement","getSelection","getLastSelection","setSelection","selection","selectionLoop","_useDeferLoop","runSelectionLoop","stopSelectionLoop","useLayoutEffect","addEventListener","removeEventListener","useValue","initialValue","valueRef","getValue","getLastValue","setValue","newValue","useInputState","_useSelection","_useValue","getLastInputState","getInputState","setInputState","_ref","usePrevious","ref","CONTROLLED_PROPS","defaultFormatChars","a","validateMaxLength","props","process","env","NODE_ENV","maxLength","mask","validateMaskPlaceholder","maskPlaceholder","validateChildren","inputElement","conflictProps","filter","propId","join","isFunction","findLastIndex","array","predicate","x","repeat","string","n","result","toString","parseMask","permanents","prefix","lastEditablePosition","isPermanent","parsedMaskString","split","forEach","character","push","map","index","position","MaskUtils","options","_this","isCharacterAllowedAtPosition","maskOptions","isCharacterFillingPosition","isPositionEditable","charRule","RegExp","test","_this$maskOptions","isValueEmpty","every","isValueFilled","getFilledLength","getDefaultSelectionForValue","filledLength","cursorPosition","getRightEditablePosition","characters","lastFilledIndex","getStringFillingLengthAtPosition","insertedValue","reduce","insertCharacterAtPosition","getLeftEditablePosition","formatValue","_this$maskOptions2","insertStringAtPosition","clearRange","len","_this$maskOptions3","clearedValue","isEditable","_this$maskOptions4","isAllowed","nextEditablePosition","isNextPlaceholder","valueBefore","slice","insertedCharacter","_this$maskOptions5","isFixedLength","valueAfter","editableCharactersAfter","processChange","currentState","previousState","_this$maskOptions6","previousValue","previousSelection","enteredString","formattedEnteredStringLength","removedLength","Math","min","deleteFromRight","InputMaskChildrenWrapper","_React$Component","_proto","render","_this$props","children","cloneElement","Component","InputMask","forwardRef","forwardedRef","alwaysShowMask","beforeMaskedStateChange","restProps","maskUtils","disabled","readOnly","isControlled","previousIsMasked","defaultValue","_useInputState","onChange","event","newInputState","nextState","onFocus","currentValue","newSelection","onBlur","lastValue","onMouseDown","_getInputState","mouseDownX","clientX","mouseDownY","clientY","mouseDownTime","Date","getTime","mouseUpHandler","mouseUpEvent","deltaX","abs","deltaY","axisDelta","max","timeDelta","_lastState","newState","isFocused","lastState","lastSelection","formattedValue","shouldFormatValue","inputProps","findDOMNode","createElement","displayName","defaultProps","propTypes","bool","func","element","oneOfType","arrayOf","instanceOf","module","exports"],"sources":["/Users/gulbakhytsassykova/alis/node_modules/react-input-mask/lib/react-input-mask.development.js"],"sourcesContent":["'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = require('react');\nvar React__default = _interopDefault(React);\nvar reactDom = require('react-dom');\nvar PropTypes = _interopDefault(require('prop-types'));\nvar invariant = _interopDefault(require('invariant'));\nvar warning = _interopDefault(require('warning'));\n\nfunction _defaults2(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _defaults2(subClass, superClass);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction defer(fn) {\n  return requestAnimationFrame(fn);\n}\nfunction cancelDefer(deferId) {\n  cancelAnimationFrame(deferId);\n}\n\nfunction setInputSelection(input, start, end) {\n  if (end === undefined) {\n    end = start;\n  }\n\n  input.setSelectionRange(start, end);\n}\nfunction getInputSelection(input) {\n  var start = input.selectionStart;\n  var end = input.selectionEnd;\n  return {\n    start: start,\n    end: end,\n    length: end - start\n  };\n}\nfunction isInputFocused(input) {\n  return document.hasFocus() && document.activeElement === input;\n}\n\nfunction useInputElement(inputRef) {\n  return React.useCallback(function () {\n    var input = inputRef.current;\n    var isDOMNode = typeof window !== \"undefined\" && input instanceof window.HTMLElement; // workaround for react-test-renderer\n    // https://github.com/sanniassin/react-input-mask/issues/147\n\n    if (!input || !isDOMNode) {\n      return null;\n    }\n\n    if (input.nodeName !== \"INPUT\") {\n      input = input.querySelector(\"input\");\n    }\n\n    if (!input) {\n      throw new Error(\"react-input-mask: inputComponent doesn't contain input node\");\n    }\n\n    return input;\n  }, [inputRef]);\n}\n\nfunction useDeferLoop(callback) {\n  var deferIdRef = React.useRef(null);\n  var runLoop = React.useCallback(function () {\n    // If there are simulated focus events, runLoop could be\n    // called multiple times without blur or re-render\n    if (deferIdRef.current !== null) {\n      return;\n    }\n\n    function loop() {\n      callback();\n      deferIdRef.current = defer(loop);\n    }\n\n    loop();\n  }, [callback]);\n  var stopLoop = React.useCallback(function () {\n    cancelDefer(deferIdRef.current);\n    deferIdRef.current = null;\n  }, []);\n  React.useEffect(function () {\n    if (deferIdRef.current) {\n      stopLoop();\n      runLoop();\n    }\n  }, [runLoop, stopLoop]);\n  React.useEffect(cancelDefer, []);\n  return [runLoop, stopLoop];\n}\n\nfunction useSelection(inputRef, isMasked) {\n  var selectionRef = React.useRef({\n    start: null,\n    end: null\n  });\n  var getInputElement = useInputElement(inputRef);\n  var getSelection = React.useCallback(function () {\n    var input = getInputElement();\n    return getInputSelection(input);\n  }, [getInputElement]);\n  var getLastSelection = React.useCallback(function () {\n    return selectionRef.current;\n  }, []);\n  var setSelection = React.useCallback(function (selection) {\n    var input = getInputElement(); // Don't change selection on unfocused input\n    // because Safari sets focus on selection change (#154)\n\n    if (!input || !isInputFocused(input)) {\n      return;\n    }\n\n    setInputSelection(input, selection.start, selection.end); // Use actual selection in case the requested one was out of range\n\n    selectionRef.current = getSelection();\n  }, [getInputElement, getSelection]);\n  var selectionLoop = React.useCallback(function () {\n    selectionRef.current = getSelection();\n  }, [getSelection]);\n\n  var _useDeferLoop = useDeferLoop(selectionLoop),\n      runSelectionLoop = _useDeferLoop[0],\n      stopSelectionLoop = _useDeferLoop[1];\n\n  React.useLayoutEffect(function () {\n    if (!isMasked) {\n      return;\n    }\n\n    var input = getInputElement();\n    input.addEventListener(\"focus\", runSelectionLoop);\n    input.addEventListener(\"blur\", stopSelectionLoop);\n\n    if (isInputFocused(input)) {\n      runSelectionLoop();\n    }\n\n    return function () {\n      input.removeEventListener(\"focus\", runSelectionLoop);\n      input.removeEventListener(\"blur\", stopSelectionLoop);\n      stopSelectionLoop();\n    };\n  });\n  return {\n    getSelection: getSelection,\n    getLastSelection: getLastSelection,\n    setSelection: setSelection\n  };\n}\n\nfunction useValue(inputRef, initialValue) {\n  var getInputElement = useInputElement(inputRef);\n  var valueRef = React.useRef(initialValue);\n  var getValue = React.useCallback(function () {\n    var input = getInputElement();\n    return input.value;\n  }, [getInputElement]);\n  var getLastValue = React.useCallback(function () {\n    return valueRef.current;\n  }, []);\n  var setValue = React.useCallback(function (newValue) {\n    valueRef.current = newValue;\n    var input = getInputElement();\n\n    if (input) {\n      input.value = newValue;\n    }\n  }, [getInputElement]);\n  return {\n    getValue: getValue,\n    getLastValue: getLastValue,\n    setValue: setValue\n  };\n}\n\nfunction useInputState(initialValue, isMasked) {\n  var inputRef = React.useRef();\n\n  var _useSelection = useSelection(inputRef, isMasked),\n      getSelection = _useSelection.getSelection,\n      getLastSelection = _useSelection.getLastSelection,\n      setSelection = _useSelection.setSelection;\n\n  var _useValue = useValue(inputRef, initialValue),\n      getValue = _useValue.getValue,\n      getLastValue = _useValue.getLastValue,\n      setValue = _useValue.setValue;\n\n  function getLastInputState() {\n    return {\n      value: getLastValue(),\n      selection: getLastSelection()\n    };\n  }\n\n  function getInputState() {\n    return {\n      value: getValue(),\n      selection: getSelection()\n    };\n  }\n\n  function setInputState(_ref) {\n    var value = _ref.value,\n        selection = _ref.selection;\n    setValue(value);\n    setSelection(selection);\n  }\n\n  return {\n    inputRef: inputRef,\n    getInputState: getInputState,\n    getLastInputState: getLastInputState,\n    setInputState: setInputState\n  };\n}\nfunction usePrevious(value) {\n  var ref = React.useRef();\n  React.useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nvar CONTROLLED_PROPS = [\"disabled\", \"onBlur\", \"onChange\", \"onFocus\", \"onMouseDown\", \"readOnly\", \"value\"];\nvar defaultFormatChars = {\n  \"9\": /[0-9]/,\n  a: /[A-Za-z]/,\n  \"*\": /[A-Za-z0-9]/\n};\n\nfunction validateMaxLength(props) {\n  process.env.NODE_ENV !== \"production\" ? warning(!props.maxLength || !props.mask, \"react-input-mask: maxLength property shouldn't be passed to the masked input. It breaks masking and unnecessary because length is limited by the mask length.\") : void 0;\n}\nfunction validateMaskPlaceholder(props) {\n  var mask = props.mask,\n      maskPlaceholder = props.maskPlaceholder;\n  !(!mask || !maskPlaceholder || maskPlaceholder.length === 1 || maskPlaceholder.length === mask.length) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-input-mask: maskPlaceholder should either be a single character or have the same length as the mask:\\n\" + (\"mask: \" + mask + \"\\n\") + (\"maskPlaceholder: \" + maskPlaceholder)) : invariant(false) : void 0;\n}\nfunction validateChildren(props, inputElement) {\n  var conflictProps = CONTROLLED_PROPS.filter(function (propId) {\n    return inputElement.props[propId] != null && inputElement.props[propId] !== props[propId];\n  });\n  !!conflictProps.length ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"react-input-mask: the following props should be passed to the InputMask component, not to children: \" + conflictProps.join(\",\")) : invariant(false) : void 0;\n}\n\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\nfunction findLastIndex(array, predicate) {\n  for (var i = array.length - 1; i >= 0; i--) {\n    var x = array[i];\n\n    if (predicate(x, i)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\nfunction repeat(string, n) {\n  if (n === void 0) {\n    n = 1;\n  }\n\n  var result = \"\";\n\n  for (var i = 0; i < n; i++) {\n    result += string;\n  }\n\n  return result;\n}\nfunction toString(value) {\n  return \"\" + value;\n}\n\nfunction parseMask (_ref) {\n  var mask = _ref.mask,\n      maskPlaceholder = _ref.maskPlaceholder;\n  var permanents = [];\n\n  if (!mask) {\n    return {\n      maskPlaceholder: null,\n      mask: null,\n      prefix: null,\n      lastEditablePosition: null,\n      permanents: []\n    };\n  }\n\n  if (typeof mask === \"string\") {\n    var isPermanent = false;\n    var parsedMaskString = \"\";\n    mask.split(\"\").forEach(function (character) {\n      if (!isPermanent && character === \"\\\\\") {\n        isPermanent = true;\n      } else {\n        if (isPermanent || !defaultFormatChars[character]) {\n          permanents.push(parsedMaskString.length);\n        }\n\n        parsedMaskString += character;\n        isPermanent = false;\n      }\n    });\n    mask = parsedMaskString.split(\"\").map(function (character, index) {\n      if (permanents.indexOf(index) === -1) {\n        return defaultFormatChars[character];\n      }\n\n      return character;\n    });\n  } else {\n    mask.forEach(function (character, index) {\n      if (typeof character === \"string\") {\n        permanents.push(index);\n      }\n    });\n  }\n\n  if (maskPlaceholder) {\n    if (maskPlaceholder.length === 1) {\n      maskPlaceholder = mask.map(function (character, index) {\n        if (permanents.indexOf(index) !== -1) {\n          return character;\n        }\n\n        return maskPlaceholder;\n      });\n    } else {\n      maskPlaceholder = maskPlaceholder.split(\"\");\n    }\n\n    permanents.forEach(function (position) {\n      maskPlaceholder[position] = mask[position];\n    });\n    maskPlaceholder = maskPlaceholder.join(\"\");\n  }\n\n  var prefix = permanents.filter(function (position, index) {\n    return position === index;\n  }).map(function (position) {\n    return mask[position];\n  }).join(\"\");\n  var lastEditablePosition = mask.length - 1;\n\n  while (permanents.indexOf(lastEditablePosition) !== -1) {\n    lastEditablePosition--;\n  }\n\n  return {\n    maskPlaceholder: maskPlaceholder,\n    prefix: prefix,\n    mask: mask,\n    lastEditablePosition: lastEditablePosition,\n    permanents: permanents\n  };\n}\n\n/* eslint no-use-before-define: [\"error\", { functions: false }] */\n\nvar MaskUtils = function MaskUtils(options) {\n  var _this = this;\n\n  this.isCharacterAllowedAtPosition = function (character, position) {\n    var maskPlaceholder = _this.maskOptions.maskPlaceholder;\n\n    if (_this.isCharacterFillingPosition(character, position)) {\n      return true;\n    }\n\n    if (!maskPlaceholder) {\n      return false;\n    }\n\n    return maskPlaceholder[position] === character;\n  };\n\n  this.isCharacterFillingPosition = function (character, position) {\n    var mask = _this.maskOptions.mask;\n\n    if (!character || position >= mask.length) {\n      return false;\n    }\n\n    if (!_this.isPositionEditable(position)) {\n      return mask[position] === character;\n    }\n\n    var charRule = mask[position];\n    return new RegExp(charRule).test(character);\n  };\n\n  this.isPositionEditable = function (position) {\n    var _this$maskOptions = _this.maskOptions,\n        mask = _this$maskOptions.mask,\n        permanents = _this$maskOptions.permanents;\n    return position < mask.length && permanents.indexOf(position) === -1;\n  };\n\n  this.isValueEmpty = function (value) {\n    return value.split(\"\").every(function (character, position) {\n      return !_this.isPositionEditable(position) || !_this.isCharacterFillingPosition(character, position);\n    });\n  };\n\n  this.isValueFilled = function (value) {\n    return _this.getFilledLength(value) === _this.maskOptions.lastEditablePosition + 1;\n  };\n\n  this.getDefaultSelectionForValue = function (value) {\n    var filledLength = _this.getFilledLength(value);\n\n    var cursorPosition = _this.getRightEditablePosition(filledLength);\n\n    return {\n      start: cursorPosition,\n      end: cursorPosition\n    };\n  };\n\n  this.getFilledLength = function (value) {\n    var characters = value.split(\"\");\n    var lastFilledIndex = findLastIndex(characters, function (character, position) {\n      return _this.isPositionEditable(position) && _this.isCharacterFillingPosition(character, position);\n    });\n    return lastFilledIndex + 1;\n  };\n\n  this.getStringFillingLengthAtPosition = function (string, position) {\n    var characters = string.split(\"\");\n    var insertedValue = characters.reduce(function (value, character) {\n      return _this.insertCharacterAtPosition(value, character, value.length);\n    }, repeat(\" \", position));\n    return insertedValue.length - position;\n  };\n\n  this.getLeftEditablePosition = function (position) {\n    for (var i = position; i >= 0; i--) {\n      if (_this.isPositionEditable(i)) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  this.getRightEditablePosition = function (position) {\n    var mask = _this.maskOptions.mask;\n\n    for (var i = position; i < mask.length; i++) {\n      if (_this.isPositionEditable(i)) {\n        return i;\n      }\n    }\n\n    return null;\n  };\n\n  this.formatValue = function (value) {\n    var _this$maskOptions2 = _this.maskOptions,\n        maskPlaceholder = _this$maskOptions2.maskPlaceholder,\n        mask = _this$maskOptions2.mask;\n\n    if (!maskPlaceholder) {\n      value = _this.insertStringAtPosition(\"\", value, 0);\n\n      while (value.length < mask.length && !_this.isPositionEditable(value.length)) {\n        value += mask[value.length];\n      }\n\n      return value;\n    }\n\n    return _this.insertStringAtPosition(maskPlaceholder, value, 0);\n  };\n\n  this.clearRange = function (value, start, len) {\n    if (!len) {\n      return value;\n    }\n\n    var end = start + len;\n    var _this$maskOptions3 = _this.maskOptions,\n        maskPlaceholder = _this$maskOptions3.maskPlaceholder,\n        mask = _this$maskOptions3.mask;\n    var clearedValue = value.split(\"\").map(function (character, i) {\n      var isEditable = _this.isPositionEditable(i);\n\n      if (!maskPlaceholder && i >= end && !isEditable) {\n        return \"\";\n      }\n\n      if (i < start || i >= end) {\n        return character;\n      }\n\n      if (!isEditable) {\n        return mask[i];\n      }\n\n      if (maskPlaceholder) {\n        return maskPlaceholder[i];\n      }\n\n      return \"\";\n    }).join(\"\");\n    return _this.formatValue(clearedValue);\n  };\n\n  this.insertCharacterAtPosition = function (value, character, position) {\n    var _this$maskOptions4 = _this.maskOptions,\n        mask = _this$maskOptions4.mask,\n        maskPlaceholder = _this$maskOptions4.maskPlaceholder;\n\n    if (position >= mask.length) {\n      return value;\n    }\n\n    var isAllowed = _this.isCharacterAllowedAtPosition(character, position);\n\n    var isEditable = _this.isPositionEditable(position);\n\n    var nextEditablePosition = _this.getRightEditablePosition(position);\n\n    var isNextPlaceholder = maskPlaceholder && nextEditablePosition ? character === maskPlaceholder[nextEditablePosition] : null;\n    var valueBefore = value.slice(0, position);\n\n    if (isAllowed || !isEditable) {\n      var insertedCharacter = isAllowed ? character : mask[position];\n      value = valueBefore + insertedCharacter;\n    }\n\n    if (!isAllowed && !isEditable && !isNextPlaceholder) {\n      value = _this.insertCharacterAtPosition(value, character, position + 1);\n    }\n\n    return value;\n  };\n\n  this.insertStringAtPosition = function (value, string, position) {\n    var _this$maskOptions5 = _this.maskOptions,\n        mask = _this$maskOptions5.mask,\n        maskPlaceholder = _this$maskOptions5.maskPlaceholder;\n\n    if (!string || position >= mask.length) {\n      return value;\n    }\n\n    var characters = string.split(\"\");\n    var isFixedLength = _this.isValueFilled(value) || !!maskPlaceholder;\n    var valueAfter = value.slice(position);\n    value = characters.reduce(function (value, character) {\n      return _this.insertCharacterAtPosition(value, character, value.length);\n    }, value.slice(0, position));\n\n    if (isFixedLength) {\n      value += valueAfter.slice(value.length - position);\n    } else if (_this.isValueFilled(value)) {\n      value += mask.slice(value.length).join(\"\");\n    } else {\n      var editableCharactersAfter = valueAfter.split(\"\").filter(function (character, i) {\n        return _this.isPositionEditable(position + i);\n      });\n      value = editableCharactersAfter.reduce(function (value, character) {\n        var nextEditablePosition = _this.getRightEditablePosition(value.length);\n\n        if (nextEditablePosition === null) {\n          return value;\n        }\n\n        if (!_this.isPositionEditable(value.length)) {\n          value += mask.slice(value.length, nextEditablePosition).join(\"\");\n        }\n\n        return _this.insertCharacterAtPosition(value, character, value.length);\n      }, value);\n    }\n\n    return value;\n  };\n\n  this.processChange = function (currentState, previousState) {\n    var _this$maskOptions6 = _this.maskOptions,\n        mask = _this$maskOptions6.mask,\n        prefix = _this$maskOptions6.prefix,\n        lastEditablePosition = _this$maskOptions6.lastEditablePosition;\n    var value = currentState.value,\n        selection = currentState.selection;\n    var previousValue = previousState.value;\n    var previousSelection = previousState.selection;\n    var newValue = value;\n    var enteredString = \"\";\n    var formattedEnteredStringLength = 0;\n    var removedLength = 0;\n    var cursorPosition = Math.min(previousSelection.start, selection.start);\n\n    if (selection.end > previousSelection.start) {\n      enteredString = newValue.slice(previousSelection.start, selection.end);\n      formattedEnteredStringLength = _this.getStringFillingLengthAtPosition(enteredString, cursorPosition);\n\n      if (!formattedEnteredStringLength) {\n        removedLength = 0;\n      } else {\n        removedLength = previousSelection.length;\n      }\n    } else if (newValue.length < previousValue.length) {\n      removedLength = previousValue.length - newValue.length;\n    }\n\n    newValue = previousValue;\n\n    if (removedLength) {\n      if (removedLength === 1 && !previousSelection.length) {\n        var deleteFromRight = previousSelection.start === selection.start;\n        cursorPosition = deleteFromRight ? _this.getRightEditablePosition(selection.start) : _this.getLeftEditablePosition(selection.start);\n      }\n\n      newValue = _this.clearRange(newValue, cursorPosition, removedLength);\n    }\n\n    newValue = _this.insertStringAtPosition(newValue, enteredString, cursorPosition);\n    cursorPosition += formattedEnteredStringLength;\n\n    if (cursorPosition >= mask.length) {\n      cursorPosition = mask.length;\n    } else if (cursorPosition < prefix.length && !formattedEnteredStringLength) {\n      cursorPosition = prefix.length;\n    } else if (cursorPosition >= prefix.length && cursorPosition < lastEditablePosition && formattedEnteredStringLength) {\n      cursorPosition = _this.getRightEditablePosition(cursorPosition);\n    }\n\n    newValue = _this.formatValue(newValue);\n    return {\n      value: newValue,\n      enteredString: enteredString,\n      selection: {\n        start: cursorPosition,\n        end: cursorPosition\n      }\n    };\n  };\n\n  this.maskOptions = parseMask(options);\n};\n\nvar InputMaskChildrenWrapper =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InputMaskChildrenWrapper, _React$Component);\n\n  function InputMaskChildrenWrapper() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = InputMaskChildrenWrapper.prototype;\n\n  _proto.render = function render() {\n    // eslint-disable-next-line react/prop-types\n    var _this$props = this.props,\n        children = _this$props.children,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\"]);\n\n    return React__default.cloneElement(children, props);\n  };\n\n  return InputMaskChildrenWrapper;\n}(React__default.Component);\n\nvar InputMask = React.forwardRef(function InputMask(props, forwardedRef) {\n  var alwaysShowMask = props.alwaysShowMask,\n      children = props.children,\n      mask = props.mask,\n      maskPlaceholder = props.maskPlaceholder,\n      beforeMaskedStateChange = props.beforeMaskedStateChange,\n      restProps = _objectWithoutPropertiesLoose(props, [\"alwaysShowMask\", \"children\", \"mask\", \"maskPlaceholder\", \"beforeMaskedStateChange\"]);\n\n  validateMaxLength(props);\n  validateMaskPlaceholder(props);\n  var maskUtils = new MaskUtils({\n    mask: mask,\n    maskPlaceholder: maskPlaceholder\n  });\n  var isMasked = !!mask;\n  var isEditable = !restProps.disabled && !restProps.readOnly;\n  var isControlled = props.value !== null && props.value !== undefined;\n  var previousIsMasked = usePrevious(isMasked);\n  var initialValue = toString((isControlled ? props.value : props.defaultValue) || \"\");\n\n  var _useInputState = useInputState(initialValue, isMasked),\n      inputRef = _useInputState.inputRef,\n      getInputState = _useInputState.getInputState,\n      setInputState = _useInputState.setInputState,\n      getLastInputState = _useInputState.getLastInputState;\n\n  var getInputElement = useInputElement(inputRef);\n\n  function onChange(event) {\n    var currentState = getInputState();\n    var previousState = getLastInputState();\n    var newInputState = maskUtils.processChange(currentState, previousState);\n\n    if (beforeMaskedStateChange) {\n      newInputState = beforeMaskedStateChange({\n        currentState: currentState,\n        previousState: previousState,\n        nextState: newInputState\n      });\n    }\n\n    setInputState(newInputState);\n\n    if (props.onChange) {\n      props.onChange(event);\n    }\n  }\n\n  function onFocus(event) {\n    // If autoFocus property is set, focus event fires before the ref handler gets called\n    inputRef.current = event.target;\n    var currentValue = getInputState().value;\n\n    if (isMasked && !maskUtils.isValueFilled(currentValue)) {\n      var newValue = maskUtils.formatValue(currentValue);\n      var newSelection = maskUtils.getDefaultSelectionForValue(newValue);\n      var newInputState = {\n        value: newValue,\n        selection: newSelection\n      };\n\n      if (beforeMaskedStateChange) {\n        newInputState = beforeMaskedStateChange({\n          currentState: getInputState(),\n          nextState: newInputState\n        });\n        newValue = newInputState.value;\n        newSelection = newInputState.selection;\n      }\n\n      setInputState(newInputState);\n\n      if (newValue !== currentValue && props.onChange) {\n        props.onChange(event);\n      } // Chrome resets selection after focus event,\n      // so we want to restore it later\n\n\n      defer(function () {\n        setInputState(getLastInputState());\n      });\n    }\n\n    if (props.onFocus) {\n      props.onFocus(event);\n    }\n  }\n\n  function onBlur(event) {\n    var currentValue = getInputState().value;\n    var lastValue = getLastInputState().value;\n\n    if (isMasked && !alwaysShowMask && maskUtils.isValueEmpty(lastValue)) {\n      var newValue = \"\";\n      var newInputState = {\n        value: newValue,\n        selection: {\n          start: null,\n          end: null\n        }\n      };\n\n      if (beforeMaskedStateChange) {\n        newInputState = beforeMaskedStateChange({\n          currentState: getInputState(),\n          nextState: newInputState\n        });\n        newValue = newInputState.value;\n      }\n\n      setInputState(newInputState);\n\n      if (newValue !== currentValue && props.onChange) {\n        props.onChange(event);\n      }\n    }\n\n    if (props.onBlur) {\n      props.onBlur(event);\n    }\n  } // Tiny unintentional mouse movements can break cursor\n  // position on focus, so we have to restore it in that case\n  //\n  // https://github.com/sanniassin/react-input-mask/issues/108\n\n\n  function onMouseDown(event) {\n    var input = getInputElement();\n\n    var _getInputState = getInputState(),\n        value = _getInputState.value;\n\n    if (!isInputFocused(input) && !maskUtils.isValueFilled(value)) {\n      var mouseDownX = event.clientX;\n      var mouseDownY = event.clientY;\n      var mouseDownTime = new Date().getTime();\n\n      var mouseUpHandler = function mouseUpHandler(mouseUpEvent) {\n        document.removeEventListener(\"mouseup\", mouseUpHandler);\n\n        if (!isInputFocused(input)) {\n          return;\n        }\n\n        var deltaX = Math.abs(mouseUpEvent.clientX - mouseDownX);\n        var deltaY = Math.abs(mouseUpEvent.clientY - mouseDownY);\n        var axisDelta = Math.max(deltaX, deltaY);\n        var timeDelta = new Date().getTime() - mouseDownTime;\n\n        if (axisDelta <= 10 && timeDelta <= 200 || axisDelta <= 5 && timeDelta <= 300) {\n          var _lastState = getLastInputState();\n\n          var newSelection = maskUtils.getDefaultSelectionForValue(_lastState.value);\n\n          var newState = _extends({}, _lastState, {\n            selection: newSelection\n          });\n\n          setInputState(newState);\n        }\n      };\n\n      document.addEventListener(\"mouseup\", mouseUpHandler);\n    }\n\n    if (props.onMouseDown) {\n      props.onMouseDown(event);\n    }\n  } // For controlled inputs we want to provide properly formatted\n  // value prop\n\n\n  if (isMasked && isControlled) {\n    var input = getInputElement();\n    var isFocused = input && isInputFocused(input);\n    var newValue = isFocused || alwaysShowMask || props.value ? maskUtils.formatValue(props.value) : props.value;\n\n    if (beforeMaskedStateChange) {\n      newValue = beforeMaskedStateChange({\n        nextState: {\n          value: newValue,\n          selection: {\n            start: null,\n            end: null\n          }\n        }\n      }).value;\n    }\n\n    setInputState(_extends({}, getLastInputState(), {\n      value: newValue\n    }));\n  }\n\n  var lastState = getLastInputState();\n  var lastSelection = lastState.selection;\n  var lastValue = lastState.value;\n  React.useLayoutEffect(function () {\n    if (!isMasked) {\n      return;\n    }\n\n    var input = getInputElement();\n    var isFocused = isInputFocused(input);\n    var previousSelection = lastSelection;\n    var currentState = getInputState();\n\n    var newInputState = _extends({}, currentState); // Update value for uncontrolled inputs to make sure\n    // it's always in sync with mask props\n\n\n    if (!isControlled) {\n      var currentValue = currentState.value;\n      var formattedValue = maskUtils.formatValue(currentValue);\n      var isValueEmpty = maskUtils.isValueEmpty(formattedValue);\n      var shouldFormatValue = !isValueEmpty || isFocused || alwaysShowMask;\n\n      if (shouldFormatValue) {\n        newInputState.value = formattedValue;\n      } else if (isValueEmpty && !isFocused) {\n        newInputState.value = \"\";\n      }\n    }\n\n    if (isFocused && !previousIsMasked) {\n      // Adjust selection if input got masked while being focused\n      newInputState.selection = maskUtils.getDefaultSelectionForValue(newInputState.value);\n    } else if (isControlled && isFocused && previousSelection) {\n      // Restore cursor position if value has changed outside change event\n      if (previousSelection.start !== null && previousSelection.end !== null) {\n        newInputState.selection = previousSelection;\n      }\n    }\n\n    if (beforeMaskedStateChange) {\n      newInputState = beforeMaskedStateChange({\n        currentState: currentState,\n        nextState: newInputState\n      });\n    }\n\n    setInputState(newInputState);\n  });\n\n  var inputProps = _extends({}, restProps, {\n    onFocus: onFocus,\n    onBlur: onBlur,\n    onChange: isMasked && isEditable ? onChange : props.onChange,\n    onMouseDown: isMasked && isEditable ? onMouseDown : props.onMouseDown,\n    ref: function ref(_ref) {\n      inputRef.current = reactDom.findDOMNode(_ref);\n\n      if (isFunction(forwardedRef)) {\n        forwardedRef(_ref);\n      } else if (forwardedRef !== null && typeof forwardedRef === \"object\") {\n        forwardedRef.current = _ref;\n      }\n    },\n    value: isMasked && isControlled ? lastValue : props.value\n  });\n\n  if (children) {\n    validateChildren(props, children); // We wrap children into a class component to be able to find\n    // their input element using findDOMNode\n\n    return React__default.createElement(InputMaskChildrenWrapper, inputProps, children);\n  }\n\n  return React__default.createElement(\"input\", inputProps);\n});\nInputMask.displayName = \"InputMask\";\nInputMask.defaultProps = {\n  alwaysShowMask: false,\n  maskPlaceholder: \"_\"\n};\nInputMask.propTypes = {\n  alwaysShowMask: PropTypes.bool,\n  beforeMaskedStateChange: PropTypes.func,\n  children: PropTypes.element,\n  mask: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(RegExp)]))]),\n  maskPlaceholder: PropTypes.string,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onMouseDown: PropTypes.func\n};\n\nmodule.exports = InputMask;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}